{"version":3,"file":"static/js/4158.bf9d27ee.chunk.js","mappings":"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","sources":["../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/ModalContext.js"],"sourcesContent":["import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  const modalManager = provided || getManager();\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    show = false,\n    role = 'dialog',\n    className,\n    style,\n    children,\n    backdrop = true,\n    keyboard = true,\n    onBackdropClick,\n    onEscapeKeyDown,\n    transition,\n    backdropTransition,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    renderDialog,\n    renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n    manager: providedManager,\n    container: containerRef,\n    onShow,\n    onHide = () => {},\n    onExit,\n    onExited,\n    onExiting,\n    onEnter,\n    onEntering,\n    onEntered\n  } = _ref,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      const currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  }); // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    const currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n\n  const Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/_jsx(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      in: !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered,\n      children: dialog\n    });\n  }\n\n  let backdropElement = null;\n\n  if (backdrop) {\n    const BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/_jsx(BackdropTransition, {\n        appear: true,\n        in: !!show,\n        children: backdropElement\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\n\nclass ModalManager {\n  constructor({\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n  }\n\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth();\n  }\n\n  getElement() {\n    return document.body;\n  }\n\n  setModalAttributes(_modal) {// For overriding\n  }\n\n  removeModalAttributes(_modal) {// For overriding\n  }\n\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n\n    return modalIdx;\n  }\n\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n\n    this.removeModalAttributes(modal);\n  }\n\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n\n}\n\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  return Math.abs(window.innerWidth - document.documentElement.clientWidth);\n}","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel,\n  closeVariant,\n  closeButton,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nAbstractModalHeader.defaultProps = defaultProps;\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\n\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop]; // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n\n  restore(prop, element) {\n    const value = element.dataset[prop];\n\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n\n}\n\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  'aria-label': PropTypes.string,\n  onClick: PropTypes.func,\n\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst defaultProps = {\n  'aria-label': 'Close'\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nCloseButton.defaultProps = defaultProps;\nexport default CloseButton;","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n\n});\nexport default ModalContext;"],"names":["activeElement","doc","ownerDocument","active","nodeName","e","body","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","manager","_excluded","useModalManager","provided","modalManager","ModalManager","modal","dialog","backdrop","Object","assign","add","remove","isTopModal","setDialogRef","useCallback","ref","setBackdropRef","Modal","forwardRef","_ref","_ref$show","show","_ref$role","role","className","style","children","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","props","_jsx","providedManager","containerRef","container","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","source","excluded","key","i","target","sourceKeys","keys","length","indexOf","_objectWithoutPropertiesLoose","useWaitForDOMRef","isMounted","useMounted","prevShow","usePrevious","_useState","useState","_useState2","_slicedToArray","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","useEventCallback","removeKeydownListenerRef","listen","document","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","contains","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","keyCode","defaultPrevented","Transition","dialogProps","undefined","tabIndex","React","appear","unmountOnExit","in","apply","arguments","backdropElement","BackdropTransition","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","OPEN_DATA_ATTRIBUTE","dataAttr","_ref$handleContainerO","handleContainerOverflow","_ref$isRTL","isRTL","_classCallCheck","this","modals","_createClass","Math","abs","window","innerWidth","documentElement","clientWidth","_modal","containerState","overflow","paddingProp","getElement","_defineProperty","scrollBarWidth","concat","parseInt","css","setAttribute","_this","_toConsumableArray","forEach","m","removeAttribute","modalIdx","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","AbstractModalHeader","closeLabel","closeVariant","closeButton","_objectWithoutProperties","context","useContext","ModalContext","handleClick","_objectSpread","CloseButton","variant","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","sharedManager","Selector","BootstrapModalManager","_ModalManager","_inherits","_super","_createSuper","prop","element","adjust","actual","dataset","parseFloat","_get","_getPrototypeOf","prototype","call","classList","hasClass","baseVal","marginProp","qsa","el","adjustAndStore","_this2","restore","getSharedManager","options","propTypes","PropTypes","type","classNames","size","scrollbarSize","recalc","scrollDiv","createElement","position","top","width","height","appendChild","offsetWidth","removeChild","createWithBsPrefix","ModalDialog","bsPrefix","contentClassName","centered","fullscreen","scrollable","useBootstrapPrefix","dialogClass","fullScreenClass","ModalHeader","DivStyledAsH4","divWithClassName","Component","animation","dialogAs","DialogTransition","Fade","timeout","dialogClassName","Dialog","ariaLabelledby","backdropClassName","propsManager","modalStyle","setStyle","_useState3","_useState4","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","_useCallbackRef","_useCallbackRef2","setModalRef","mergedRef","useMergedRefs","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","node","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","isAppearing","addEventListener","onMouseUp","onMouseDown","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}