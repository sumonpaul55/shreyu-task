{"version":3,"file":"static/js/704.4e52aa40.chunk.js","mappings":"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","sources":["components/Scrollbar.tsx","components/TopbarSearch.tsx","components/MaximizeScreen.tsx","components/AppsDropdown/index.tsx","components/SearchDropdown.tsx","components/LanguageDropdown/index.tsx","components/NotificationDropdown.tsx","components/ProfileDropdown.tsx","components/CreateNew.tsx","layouts/Topbar.tsx","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js"],"sourcesContent":["import React from \"react\";\nimport SimpleBar from \"simplebar-react\";\n\ninterface ScrollbarProps extends SimpleBar.Props {\n  className?: string;\n  style?: any;\n  children?: any;\n}\n\nconst Scrollbar = ({\n  className,\n  style,\n  children,\n  ...otherProps\n}: ScrollbarProps) => {\n  return (\n    <SimpleBar className={className} style={style} {...otherProps}>\n      {children}\n    </SimpleBar>\n  );\n};\n\nexport default Scrollbar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Select, { components } from \"react-select\";\nimport classNames from \"classnames\";\n\nimport { groupByFields } from \"../utils\";\n\n// images\nimport Avatar2 from \"../assets/images/users/avatar-2.jpg\";\nimport Avatar5 from \"../assets/images/users/avatar-5.jpg\";\n\ninterface SearchOptions {\n  label: string;\n  icon?: string;\n  type: string;\n  value?: string;\n  userDetails?: {\n    firstname: string;\n    lastname: string;\n    position: string;\n    avatar: string;\n  };\n}\n\n/*\n * get options\n */\nconst optionGetter = (option: SearchOptions) => {\n  switch (option.type) {\n    case \"report\":\n      return (\n        <Link\n          to=\"#\"\n          className={classNames(\"dropdown-item\", \"notify-item\", \"p-0\")}\n        >\n          <i className={classNames(option.icon, \"me-1\")}></i>\n          <span>{option.label}</span>\n        </Link>\n      );\n    case \"help\":\n      return (\n        <Link\n          to=\"#\"\n          className={classNames(\"dropdown-item\", \"notify-item\", \"p-0\")}\n        >\n          <i className={classNames(option.icon, \"me-1\")}></i>\n          <span>{option.label}</span>\n        </Link>\n      );\n    case \"settings\":\n      return (\n        <Link\n          to=\"#\"\n          className={classNames(\"dropdown-item\", \"notify-item\", \"p-0\")}\n        >\n          <i className={classNames(option.icon, \"me-1\")}></i>\n          <span>{option.label}</span>\n        </Link>\n      );\n    case \"title\":\n      return (\n        <div className=\"dropdown-header noti-title p-0\">\n          <h6 className=\"text-overflow mb-2 text-uppercase\">Users</h6>\n        </div>\n      );\n    case \"users\":\n      return (\n        <>\n          <Link to=\"#\" className=\"dropdown-item notify-item px-0\">\n            <div className=\"d-flex\">\n              <img\n                src={option.userDetails!.avatar}\n                alt=\"\"\n                className=\"d-flex me-2 rounded-circle\"\n                height=\"32\"\n              />\n              <div className=\"w-100\">\n                <h5 className=\"drop-username m-0 fs-14\">\n                  {option.userDetails!.firstname} {option.userDetails!.lastname}\n                </h5>\n                <span className=\"user-subinfo fs-12 mb-0\">\n                  {option.userDetails!.position}\n                </span>\n              </div>\n            </div>\n          </Link>\n        </>\n      );\n\n    default:\n      return;\n  }\n};\n\n/*\n * filter options\n */\nconst formateOptions = (options: SearchOptions[]) => {\n  const grouppedData = groupByFields(options, (item: SearchOptions) => {\n    return [item.type];\n  });\n\n  let formattedOptions = [];\n  let count = 0;\n\n  for (let i = 0; i < grouppedData.length; i++) {\n    for (let j = 0; j < grouppedData[i].length; j++) {\n      if (grouppedData[i][j].type === \"users\" && count === 0) {\n        grouppedData[i].splice(j, 0, {\n          label: \"Users\",\n          value: \"title\",\n          type: \"title\",\n        });\n        count = 1;\n      }\n      formattedOptions.push(grouppedData[i][j]);\n    }\n  }\n  return formattedOptions;\n};\n\n/* custon indicator */\nconst IndicatorsContainer = (props: any) => {\n  const { handleClick } = props.selectProps;\n  return (\n    <div style={{}}>\n      <components.IndicatorsContainer {...props}>\n        <button className=\"btn input-group-text\" onMouseDown={handleClick}>\n          <i className=\"uil uil-search\"></i>\n        </button>\n      </components.IndicatorsContainer>\n    </div>\n  );\n};\n\n/* custom menu list */\nconst MenuList = (props: any) => {\n  const { options } = props.selectProps;\n\n  return (\n    <components.MenuList {...props}>\n      {/* menu header */}\n      <div className=\"dropdown-header noti-title\">\n        <h5 className=\"text-overflow mb-2\">Found {options.length} results</h5>\n      </div>\n      {props.children}\n    </components.MenuList>\n  );\n};\n\n/* fomates the option label */\nconst handleFormatOptionLabel = (option: SearchOptions) => {\n  const formattedOption = optionGetter(option);\n  return <div>{formattedOption}</div>;\n};\n\ninterface SearchResultItem {\n  id: number;\n  title: string;\n  redirectTo: string;\n  icon: string;\n}\n\ninterface TopbarSearchProps {\n  items: Array<SearchResultItem>;\n}\n\nconst TopbarSearch = (props: TopbarSearchProps) => {\n  const options: SearchOptions[] = [\n    {\n      value: \"1\",\n      label: \"User profile settings\",\n      icon: \"uil uil-sliders-v-alt\",\n      type: \"settings\",\n    },\n    {\n      value: \"2\",\n      label: \"Analytics Report\",\n      icon: \"uil uil-home-alt\",\n      type: \"report\",\n    },\n    {\n      value: \"3\",\n      label: \"How can I help you?\",\n      icon: \"uil uil-life-ring\",\n      type: \"help\",\n    },\n    {\n      label: \"Shirley Miller\",\n      value: \"users1\",\n      type: \"users\",\n      userDetails: {\n        firstname: \"Shirley\",\n        lastname: \"Miller\",\n        position: \"UI Designer\",\n        avatar: Avatar2,\n      },\n    },\n    {\n      label: \"Timothy Moreno\",\n      value: \"users2\",\n      type: \"users\",\n      userDetails: {\n        firstname: \"Timothy\",\n        lastname: \"Moreno\",\n        position: \"Developer\",\n        avatar: Avatar5,\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Select\n        {...props}\n        components={{ IndicatorsContainer, MenuList }}\n        placeholder={\"Search...\"}\n        options={formateOptions(options)}\n        formatOptionLabel={handleFormatOptionLabel}\n        isOptionDisabled={(option) => option.type === \"title\"}\n        maxMenuHeight={350}\n        isSearchable\n        isClearable\n        name=\"search-app\"\n        className=\"app-search\"\n        classNamePrefix=\"react-select\"\n      />\n    </>\n  );\n};\n\nexport default TopbarSearch;\n","import React, { useEffect } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport FeatherIcon from \"feather-icons-react\";\n\nconst MaximizeScreen = () => {\n  useEffect(() => {\n    let elem = document.querySelector(\".maximize-icon\");\n\n    if (elem) elem.setAttribute(\"data-toggle\", \"fullscreen\");\n\n    return () => {\n      if (elem) elem.removeAttribute(\"data-toggle\");\n    };\n  }, []);\n\n  /*\n   * toggle full screen mode\n   */\n  const toggleFullscreen = () => {\n    let document: any = window.document;\n    document.body.classList.add(\"fullscreen-enable\");\n\n    if (\n      !document.fullscreenElement &&\n      /* alternative standard method */ !document.mozFullScreenElement &&\n      !document.webkitFullscreenElement\n    ) {\n      // current working methods\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen();\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen();\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen();\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      }\n    }\n\n    // handle fullscreen exit\n    const exitHandler = () => {\n      if (\n        !document.webkitIsFullScreen &&\n        !document.mozFullScreen &&\n        !document.msFullscreenElement\n      )\n        document.body.classList.remove(\"fullscreen-enable\");\n    };\n    document.addEventListener(\"fullscreenchange\", exitHandler);\n    document.addEventListener(\"webkitfullscreenchange\", exitHandler);\n    document.addEventListener(\"mozfullscreenchange\", exitHandler);\n  };\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle\n        as=\"a\"\n        id=\"dropdown-languages\"\n        onClick={toggleFullscreen}\n        className=\"nav-link cursor-pointer arrow-none\"\n      >\n        <FeatherIcon icon=\"maximize\" />\n      </Dropdown.Toggle>\n    </Dropdown>\n  );\n};\n\nexport default MaximizeScreen;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// utils\nimport { splitArray } from \"../../utils/\";\n\n// apps icon\nimport slackIcon from \"./icons/slack.png\";\nimport bitbucketIcon from \"./icons/bitbucket.png\";\nimport dribbbleIcon from \"./icons/dribbble.png\";\nimport dropboxIcon from \"./icons/dropbox.png\";\nimport githubIcon from \"./icons/github.png\";\nimport gSuiteIcon from \"./icons/g-suite.png\";\n\n// get the apps\nconst Apps = [\n  {\n    name: \"Slack\",\n    icon: slackIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"GitHub\",\n    icon: githubIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"Dribbble\",\n    icon: dribbbleIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"Bitbucket\",\n    icon: bitbucketIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"Dropbox\",\n    icon: dropboxIcon,\n    redirectTo: \"/\",\n  },\n  {\n    name: \"G Suite\",\n    icon: gSuiteIcon,\n    redirectTo: \"/\",\n  },\n];\n\nconst AppsDropdown = () => {\n  const apps = Apps || [];\n  const chunk_size = 3;\n  const appsChunks = splitArray(apps, chunk_size);\n\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle apps-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-apps\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link\", \"cursor-pointer\", {\n          show: dropdownOpen,\n        })}\n      >\n        <FeatherIcon icon=\"grid\" />\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"dropdown-lg dropdown-menu-end p-0\">\n        <div className=\"p-1\">\n          {(appsChunks || []).map((chunk, idx) => (\n            <div className=\"row g-0\" key={idx}>\n              {(chunk || []).map((item, i) => (\n                <div className=\"col\" key={i}>\n                  <Link className=\"dropdown-icon-item\" to={item.redirectTo}>\n                    <img src={item.icon} alt=\"\" />\n                    <span>{item.name}</span>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          ))}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default AppsDropdown;\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcons from \"feather-icons-react\";\n\nconst SearchDropdown = () => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle search-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-apps\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link\", \"cursor-pointer\", {\n          show: dropdownOpen,\n        })}\n      >\n        <FeatherIcons icon={\"search\"} />\n      </Dropdown.Toggle>\n\n      <Dropdown.Menu className=\"dropdown-menu-animated dropdown-lg p-0\">\n        <form className=\"p-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search ...\"\n          />\n        </form>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default SearchDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\nimport enFlag from \"./flags/us.jpg\";\nimport germanyFlag from \"./flags/germany.jpg\";\nimport italyFlag from \"./flags/italy.jpg\";\nimport spainFlag from \"./flags/spain.jpg\";\nimport russiaFlag from \"./flags/russia.jpg\";\n\n// get the languages\nconst Languages = [\n  {\n    name: \"English\",\n    flag: enFlag,\n  },\n  {\n    name: \"German\",\n    flag: germanyFlag,\n  },\n  {\n    name: \"Italian\",\n    flag: italyFlag,\n  },\n  {\n    name: \"Spanish\",\n    flag: spainFlag,\n  },\n  {\n    name: \"Russian\",\n    flag: russiaFlag,\n  },\n];\n\nconst LanguageDropdown = () => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle language-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-languages\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\"nav-link\", \"cursor-pointer\", {\n          show: dropdownOpen,\n        })}\n      >\n        <FeatherIcon icon=\"globe\" />\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu dropdown-menu-end\">\n        <div onClick={toggleDropdown}>\n          {(Languages || []).map((lang, i) => {\n            return (\n              <Link to=\"/\" className=\"dropdown-item\" key={i + \"-lang\"}>\n                <img\n                  src={lang.flag}\n                  alt={lang.name}\n                  className=\"me-1\"\n                  height=\"12\"\n                />{\" \"}\n                <span className=\"align-middle\">{lang.name}</span>\n              </Link>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default LanguageDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// types\nimport { NotificationItem } from \"../layouts/Topbar\";\n\n// components\nimport Scrollbar from \"./Scrollbar\";\n\n// notifiaction continer styles\nconst notificationContainerStyle = {\n  maxHeight: \"230px\",\n  display: \"none\",\n};\n\nconst notificationShowContainerStyle = {\n  maxHeight: \"230px\",\n};\n\ninterface NotificationDropdownProps {\n  notifications: Array<NotificationItem>;\n}\n\ninterface NotificationContainerStyle {\n  maxHeight?: string;\n  display?: string;\n}\n\nconst NotificationDropdown = (props: NotificationDropdownProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n  const [notificationContentStyle, setNotificationContentStyles] =\n    useState<NotificationContainerStyle>(notificationContainerStyle);\n\n  /*\n   * toggle notification-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n    setNotificationContentStyles(\n      notificationContentStyle === notificationContainerStyle\n        ? notificationShowContainerStyle\n        : notificationContainerStyle\n    );\n  };\n\n  /*\n   * get redirect url for notification items\n   */\n  const getRedirectUrl = (item: NotificationItem) => {\n    return `/notification/${item.id}`;\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-notification\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\n          \"nav-link\",\n          \"position-relative\",\n          \"cursor-pointer\",\n          {\n            show: dropdownOpen,\n          }\n        )}\n      >\n        <FeatherIcon icon=\"bell\" />\n        <span className=\"badge bg-danger rounded-circle noti-icon-badge\">\n          6\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu-end dropdown-lg\">\n        <div onClick={toggleDropdown}>\n          <div className=\"dropdown-item noti-title\">\n            <h5 className=\"m-0\">\n              <span className=\"float-end\">\n                <Link to=\"#\" className=\"text-dark\">\n                  <small>Clear All</small>\n                </Link>\n              </span>\n              Notification\n            </h5>\n          </div>\n          <Scrollbar className=\"noti-scroll\" style={notificationContentStyle}>\n            {(props.notifications || []).map((item, i) => {\n              return (\n                <Link\n                  to={getRedirectUrl(item)}\n                  className=\"dropdown-item notify-item border-bottom\"\n                  key={i + \"-noti\"}\n                >\n                  {item.avatar ? (\n                    <>\n                      <div className=\"notify-icon\">\n                        <img\n                          src={item.avatar}\n                          alt=\"\"\n                          className=\"img-fluid rounded-circle\"\n                        />\n                      </div>\n                      <p className=\"notify-details\">{item.text}</p>\n                      <p className=\"text-muted mb-0 user-msg\">\n                        <small>{item.subText}</small>\n                      </p>\n                    </>\n                  ) : (\n                    <>\n                      <div className={`notify-icon bg-${item.bgColor}`}>\n                        <i className={item.icon}></i>\n                      </div>\n                      <p className=\"notify-details\">\n                        {item.text}{\" \"}\n                        <small className=\"text-muted\">{item.subText}</small>\n                      </p>\n                    </>\n                  )}\n                </Link>\n              );\n            })}\n          </Scrollbar>\n\n          <Link\n            to=\"/\"\n            className=\"dropdown-item text-center text-primary notify-item notify-all\"\n          >\n            View All <i className=\"fe-arrow-right\"></i>\n          </Link>\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default NotificationDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\ninterface ProfileMenuItem {\n  label: string;\n  icon: string;\n  redirectTo: string;\n}\n\ninterface ProfileDropdownProps {\n  menuItems: Array<ProfileMenuItem>;\n  profilePic?: string;\n  username: string;\n}\n\nconst ProfileDropdown = (props: ProfileDropdownProps) => {\n  const profilePic = props.profilePic || null;\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle profile-dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n      <Dropdown.Toggle\n        id=\"dropdown-profile\"\n        as=\"a\"\n        onClick={toggleDropdown}\n        className={classNames(\n          \"nav-link\",\n          \"nav-user\",\n          \"me-0\",\n          \"cursor-pointer\",\n          { show: dropdownOpen }\n        )}\n      >\n        <img src={profilePic!} className=\"rounded-circle\" alt=\"\" />\n        <span className=\"pro-user-name ms-2\">\n          {props.username} <i className=\"uil uil-angle-down\"></i>\n        </span>\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"dropdown-menu-end profile-dropdown\">\n        <div onClick={toggleDropdown}>\n          <div className=\"dropdown-header noti-title\">\n            <h6 className=\"text-overflow m-0\">Welcome !</h6>\n          </div>\n          {(props.menuItems || []).map((item, i) => {\n            return (\n              <React.Fragment key={i}>\n                {i === props.menuItems.length - 1 && (\n                  <div className=\"dropdown-divider\"></div>\n                )}\n                <Link\n                  to={item.redirectTo}\n                  className=\"dropdown-item notify-item\"\n                  key={i + \"-profile-menu\"}\n                >\n                  <FeatherIcon\n                    icon={item.icon}\n                    className=\"icon-dual icon-xs me-1\"\n                  />\n                  <span>{item.label}</span>\n                </Link>\n              </React.Fragment>\n            );\n          })}\n        </div>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default ProfileDropdown;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Dropdown } from \"react-bootstrap\";\nimport classNames from \"classnames\";\n\ninterface CreateNewProps {\n  otherOptions: {\n    id: number;\n    label: string;\n    icon: string;\n  }[];\n}\n\nconst CreateNew = ({ otherOptions }: CreateNewProps) => {\n  const [dropdownOpen, setDropdownOpen] = useState<boolean>(false);\n\n  /*\n   * toggle dropdown\n   */\n  const toggleDropdown = () => {\n    setDropdownOpen(!dropdownOpen);\n  };\n\n  return (\n    <>\n      <Dropdown show={dropdownOpen} onToggle={toggleDropdown}>\n        <Dropdown.Toggle\n          id=\"dropdown-notification\"\n          as=\"a\"\n          onClick={toggleDropdown}\n          className={classNames(\"nav-link\", \"cursor-pointer\", {\n            show: dropdownOpen,\n          })}\n        >\n          Create New <i className=\"uil uil-angle-down\"></i>\n        </Dropdown.Toggle>\n        <Dropdown.Menu className=\"dropdown-menu\">\n          <div onClick={toggleDropdown}>\n            {(otherOptions || []).map((item, index) => {\n              return (\n                <React.Fragment key={index}>\n                  {index === otherOptions.length - 1 && (\n                    <div className=\"dropdown-divider\"></div>\n                  )}\n                  <Link key={index} to=\"#\" className=\"dropdown-item\">\n                    <i className={classNames(item.icon, \"me-1\")}></i>\n                    <span>{item.label}</span>\n                  </Link>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\n\nexport default CreateNew;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport classNames from \"classnames\";\nimport FeatherIcon from \"feather-icons-react\";\n\n// actions\nimport { showRightSidebar, changeSidebarType } from \"../redux/actions\";\n\n// store\nimport { RootState, AppDispatch } from \"../redux/store\";\n\n//constants\nimport { LayoutTypes, SideBarTypes } from \"../constants/layout\";\n\n// components\nimport TopbarSearch from \"../components/TopbarSearch\";\nimport MaximizeScreen from \"../components/MaximizeScreen\";\nimport AppsDropdown from \"../components/AppsDropdown/\";\nimport SearchDropdown from \"../components/SearchDropdown\";\nimport LanguageDropdown from \"../components/LanguageDropdown\";\nimport NotificationDropdown from \"../components/NotificationDropdown\";\nimport ProfileDropdown from \"../components/ProfileDropdown\";\nimport CreateNew from \"../components/CreateNew\";\n\n// images\nimport profilePic from \"../assets/images/users/avatar-1.jpg\";\nimport avatar4 from \"../assets/images/users/avatar-4.jpg\";\nimport logoSm from \"../assets/images/logo-sm.png\";\nimport logoDark from \"../assets/images/logo-dark.png\";\nimport logoLight from \"../assets/images/logo-light.png\";\n\nexport interface NotificationItem {\n  id: number;\n  text: string;\n  subText: string;\n  icon?: string;\n  avatar?: string;\n  bgColor?: string;\n}\n\n// get the notifications\nconst Notifications: NotificationItem[] = [\n  {\n    id: 1,\n    text: \"Cristina Pride\",\n    subText: \"Hi, How are you? What about our next meeting\",\n    avatar: profilePic,\n  },\n  {\n    id: 2,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"uil uil-comment-message\",\n    bgColor: \"primary\",\n  },\n  {\n    id: 3,\n    text: \"Karen Robinson\",\n    subText: \"Wow ! this admin looks good and awesome design\",\n    avatar: avatar4,\n  },\n  {\n    id: 4,\n    text: \"New user registered.\",\n    subText: \"5 hours ago\",\n    icon: \"uil uil-user-plus\",\n    bgColor: \"warning\",\n  },\n  {\n    id: 5,\n    text: \"Caleb Flakelar commented on Admin\",\n    subText: \"1 min ago\",\n    icon: \"uil uil-comment-message\",\n    bgColor: \"info\",\n  },\n  {\n    id: 6,\n    text: \"Carlos Crouch liked Admin\",\n    subText: \"13 days ago\",\n    icon: \"uil uil-heart\",\n    bgColor: \"secondary\",\n  },\n];\n\n// get the profilemenu\nconst ProfileMenus = [\n  {\n    label: \"My Account\",\n    icon: \"user\",\n    redirectTo: \"/\",\n  },\n  {\n    label: \"Lock Screen\",\n    icon: \"lock\",\n    redirectTo: \"/auth/lock-screen\",\n  },\n  {\n    label: \"Logout\",\n    icon: \"log-out\",\n    redirectTo: \"/auth/logout\",\n  },\n];\n\n// dummy search results\nconst SearchResults = [\n  {\n    id: 1,\n    title: \"Analytics Report\",\n    icon: \"uil-notes\",\n    redirectTo: \"/\",\n  },\n  {\n    id: 2,\n    title: \"How can I help you?\",\n    icon: \"uil-life-ring\",\n    redirectTo: \"/\",\n  },\n  {\n    id: 3,\n    icon: \"uil-cog\",\n    title: \"User profile settings\",\n    redirectTo: \"/\",\n  },\n];\n\nconst otherOptions = [\n  {\n    id: 1,\n    label: \"New Projects\",\n    icon: \"uil uil-bag\",\n  },\n  {\n    id: 2,\n    label: \"Create Users\",\n    icon: \"uil uil-user-plus\",\n  },\n  {\n    id: 3,\n    label: \"Revenue Report\",\n    icon: \"uil uil-chart-pie\",\n  },\n  {\n    id: 4,\n    label: \"Settings\",\n    icon: \"uil uil-cog\",\n  },\n  {\n    id: 4,\n    label: \"Help & Support\",\n    icon: \"uil uil-question-circle\",\n  },\n];\n\ninterface TopbarProps {\n  hideLogo?: boolean;\n  navCssClasses?: string;\n  openLeftMenuCallBack?: () => void;\n  topbarDark?: boolean;\n}\n\nconst Topbar = ({\n  hideLogo,\n  navCssClasses,\n  openLeftMenuCallBack,\n  topbarDark,\n}: TopbarProps) => {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [isopen, setIsopen] = useState<boolean>(false);\n\n  const navbarCssClasses: string = navCssClasses || \"\";\n  const containerCssClasses: string = !hideLogo ? \"container-fluid\" : \"\";\n\n  const { layoutType, leftSideBarType } = useSelector((state: RootState) => ({\n    layoutType: state.Layout.layoutType,\n    leftSideBarType: state.Layout.leftSideBarType,\n  }));\n\n  /**\n   * Toggle the leftmenu when having mobile screen\n   */\n  const handleLeftMenuCallBack = () => {\n    setIsopen(!isopen);\n    if (openLeftMenuCallBack) openLeftMenuCallBack();\n  };\n\n  /**\n   * Toggles the right sidebar\n   */\n  const handleRightSideBar = () => {\n    dispatch(showRightSidebar());\n  };\n\n  /**\n   * Toggles the left sidebar width\n   */\n  const toggleLeftSidebarWidth = () => {\n    if (leftSideBarType === \"default\" || leftSideBarType === \"compact\")\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n    if (leftSideBarType === \"condensed\")\n      dispatch(changeSidebarType(SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n  };\n\n  return (\n    <React.Fragment>\n      <div className={`navbar-custom ${navbarCssClasses}`}>\n        <div className={containerCssClasses}>\n          {!hideLogo && (\n            <div className=\"logo-box\">\n              <Link to=\"/\" className=\"logo logo-dark\">\n                <span className=\"logo-sm\">\n                  <img src={logoSm} alt=\"\" height=\"24\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoDark} alt=\"\" height=\"24\" />\n                </span>\n              </Link>\n              <Link to=\"/\" className=\"logo logo-light\">\n                <span className=\"logo-sm\">\n                  <img src={logoSm} alt=\"\" height=\"24\" />\n                </span>\n                <span className=\"logo-lg\">\n                  <img src={logoLight} alt=\"\" height=\"24\" />\n                </span>\n              </Link>\n            </div>\n          )}\n\n          <ul className=\"list-unstyled topnav-menu float-end mb-0\">\n            <li className=\"d-none d-lg-block\">\n              <TopbarSearch items={SearchResults} />\n            </li>\n\n            <li className=\"dropdown d-inline-block d-lg-none\">\n              <SearchDropdown />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block\">\n              <MaximizeScreen />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <AppsDropdown />\n            </li>\n            <li className=\"dropdown d-none d-lg-inline-block topbar-dropdown\">\n              <LanguageDropdown />\n            </li>\n            <li className=\"dropdown notification-list topbar-dropdown\">\n              <NotificationDropdown notifications={Notifications} />\n            </li>\n            <li className=\"dropdown notification-list topbar-dropdown\">\n              <ProfileDropdown\n                profilePic={profilePic}\n                menuItems={ProfileMenus}\n                username={\"Nik Patel\"}\n              />\n            </li>\n            <li className=\"dropdown notification-list\">\n              <button\n                className=\"nav-link right-bar-toggle arrow-none btn btn-link shadow-none\"\n                onClick={handleRightSideBar}\n              >\n                <FeatherIcon icon=\"settings\" />\n              </button>\n            </li>\n          </ul>\n\n          <ul className=\"list-unstyled topnav-menu topnav-menu-left m-0\">\n            {layoutType !== LayoutTypes.LAYOUT_HORIZONTAL && (\n              <li>\n                <button\n                  className=\"button-menu-mobile d-none d-lg-block\"\n                  onClick={toggleLeftSidebarWidth}\n                >\n                  <FeatherIcon icon=\"menu\" />\n                  <i className=\"fe-menu\"></i>\n                </button>\n              </li>\n            )}\n\n            <li>\n              <button\n                className=\"button-menu-mobile d-lg-none d-bolck\"\n                onClick={handleLeftMenuCallBack}\n              >\n                <FeatherIcon icon=\"menu\" />\n              </button>\n            </li>\n\n            {/* Mobile menu toggle (Horizontal Layout) */}\n            <li>\n              <Link\n                to=\"#\"\n                className={classNames(\"navbar-toggle nav-link\", {\n                  open: isopen,\n                })}\n                onClick={handleLeftMenuCallBack}\n              >\n                <div className=\"lines\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </Link>\n            </li>\n\n            <li className=\"dropdown d-none d-xl-block\">\n              <CreateNew otherOptions={otherOptions} />\n            </li>\n          </ul>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Topbar;\n","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}"],"names":["_ref","className","style","children","otherProps","_objectWithoutProperties","_excluded","_jsx","SimpleBar","_objectSpread","formateOptions","options","grouppedData","groupByFields","item","type","formattedOptions","count","i","length","j","splice","label","value","push","IndicatorsContainer","props","handleClick","selectProps","components","onMouseDown","MenuList","_jsxs","handleFormatOptionLabel","option","formattedOption","Link","to","classNames","icon","_Fragment","src","userDetails","avatar","alt","height","firstname","lastname","position","optionGetter","Avatar2","Avatar5","Select","placeholder","formatOptionLabel","isOptionDisabled","maxMenuHeight","isSearchable","isClearable","name","classNamePrefix","useEffect","elem","document","querySelector","setAttribute","removeAttribute","Dropdown","as","id","onClick","window","body","classList","add","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","exitHandler","webkitIsFullScreen","mozFullScreen","msFullscreenElement","remove","addEventListener","FeatherIcon","Apps","redirectTo","apps","appsChunks","splitArray","_useState","useState","_useState2","_slicedToArray","dropdownOpen","setDropdownOpen","toggleDropdown","show","onToggle","map","chunk","idx","FeatherIcons","Languages","flag","lang","notificationContainerStyle","maxHeight","display","notificationShowContainerStyle","_useState3","_useState4","notificationContentStyle","setNotificationContentStyles","getRedirectUrl","concat","Scrollbar","notifications","text","subText","bgColor","profilePic","username","menuItems","React","otherOptions","index","Notifications","avatar4","ProfileMenus","SearchResults","title","hideLogo","navCssClasses","openLeftMenuCallBack","dispatch","topbarDark","useDispatch","isopen","setIsopen","navbarCssClasses","containerCssClasses","_useSelector","useSelector","state","layoutType","Layout","leftSideBarType","handleLeftMenuCallBack","logoSm","logoDark","logoLight","TopbarSearch","items","SearchDropdown","MaximizeScreen","AppsDropdown","LanguageDropdown","NotificationDropdown","ProfileDropdown","showRightSidebar","LayoutTypes","changeSidebarType","SideBarTypes","open","CreateNew","isReactNative","global","navigator","product","useLayoutEffect","WeakMap","Anchor","ref","href","onKeyDown","source","excluded","key","target","sourceKeys","Object","keys","indexOf","_objectWithoutPropertiesLoose","_useButtonProps","useButtonProps","assign","tagName","buttonProps","handleKeyDown","useEventCallback","e","trim","role","displayName","_ref2","disabled","rel","_ref2$tabIndex","tabIndex","meta","event","isTrivialHref","preventDefault","stopPropagation","undefined","Button","asProp","_useButtonProps2","Component","useCallbackRef","useRef","current","fn","useCommittedRef","useCallback","apply","arguments","useEventListener","eventTarget","listener","capture","handler","removeEventListener","useGlobalListener","documentTarget","useMounted","mounted","isMounted","usePrevious"],"sourceRoot":""}